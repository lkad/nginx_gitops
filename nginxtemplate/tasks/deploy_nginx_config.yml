---
# - name: Include vars file
#   include_vars:
#     file: "{{ vars_file }}"
- name: get vars file 
  local_action:
    module: command
    cmd: bash "{{ playbook_dir }}/{{ vars_file }}"
  register: vars_file_output
- name: Debug var
  debug:
    var: vars_file_output
- name: 动态加载变量文件
  set_fact:
    httpiconfig:  "{{ vars_file_output.stdout  | from_yaml }}"


- name: Deploy and validate NGINX configuration

  block:
    - name: nginx_config
      debug:
        var: vars_file_output
    - name: nginx_config_http_
      debug:
        var: httpiconfig
    - name: Ensure NGINX HTTP directory exists
      ansible.builtin.file:
        # path: "{{ item['deployment_location'] | default('/etc/nginx/conf.d/') | dirname }}"
        path: "{{ item['deployment_location'] | default('/etc/nginx/conf.d/') | dirname }}"
        state: directory
        mode: "0755"
      loop: "{{ httpiconfig.nginx_config_http_template }}"
      loop_control:
        label: "{{ item['deployment_location'] | default('/etc/nginx/conf.d/') | dirname }}"
      when: httpiconfig.nginx_config_http_template_enable | bool
    # - name: lua file check 
    - name: Dynamically generate NGINX HTTP config files
      ansible.builtin.template:
        src: "{{ item['template_file'] | default('http/default.conf.j2') }}"
        dest: "{{ item['deployment_location'] | default('/etc/nginx/conf.d/default.conf') }}"
        backup: "{{ item['backup'] | default(true) }}"
        mode: "0644"
      loop: "{{ httpiconfig.nginx_config_http_template }}"
      loop_control:
        label: "{{ item['deployment_location'] | default('/etc/nginx/conf.d/default.conf') }}"
      when: httpiconfig.nginx_config_http_template_enable | bool 
      register: http_config_result
      changed_when: http_config_result.changed
      notify:
        - restart nginx

    - name: Set config_changed flag if HTTP config files changed
      set_fact:
        config_changed: "{{ config_changed or http_config_result.changed }}"

    - name: check config
        shell: |
          {{ nginx_config_main_template.nginx_bin_location | default('/app/openresty/nginx/sbin/nginx') }} -t
      # failed_when: false  # 确保任务失败时继续执行 rescue
      
  rescue: 
  - name: Rollback NGINX config from backup
    unarchive:
      src: "{{ backup_dir }}www_backup_{{ ansible_date_time.date }}_{{ ansible_date_time.time }}.tar.gz"
      dest: "{{ backup_src }}"
      remote_src: yes
  - name: Rollback lualib   from backup
    unarchive:
      src: "{{ backup_dir }}lualib_backup_{{ ansible_date_time.date }}_{{ ansible_date_time.time }}.tar.gz"
      dest: "{{ backup_src2 }}"
      remote_src: yes
  # - name: Restart nginx after rollback
  #   shell: |
  #     /app/openresty/nginx/sbin/nginx -s reload
  - name: task failed,rollback ok         
    ansible.builtin.fail:
      msg: nginx config update is err,please check and try agian