{# NGINX Stream Log -- ngx_stream_log_module #}
{% macro log(log) %}
{% if log['format'] is defined %}{# 'log_format' directive is only available in the 'stream' context #}
{% for format in log['format'] %}
log_format {{ format['name'] }}{{ (' escape=' + format['escape'] | string) if format['escape'] is defined and format['escape'] in ['default', 'json', 'none'] }} {{ format['format'] }};
{% endfor %}
{% endif %}
{% if log['access'] is defined and log['access'] is boolean and not log['access'] | bool %}
access_log {{ 'off' }};
{% elif log['access'] is defined %}
{% for log in log['access'] %}
access_log {{ 'off' if not log else log['path'] if log['path'] is defined }}{{ (' ' + log['format'] | string) if log['format'] is defined -}}
{{- (' buffer=' + log['buffer'] | string) if log['buffer'] is defined -}}
{{- ' gzip' if log['gzip'] is defined and log['access']['gzip'] is boolean and log['gzip'] | bool else (' gzip=' + log['gzip'] | string) if log['gzip'] is defined and log['gzip'] is string -}}
{{- (' flush=' + log['flush'] | string) if log['flush'] is defined -}}
{{- (' if=' + log['if']) if log['if'] is defined }};
{% endfor %}
{% endif %}
{% if log['error'] is defined %}{# This does not belong here but we are making an exception #}
{% for log in log['error'] if (log['error'] is not mapping and log['error'] is not string) %}
error_log {{ log if log is string else log['file'] }}{{ (' ' + log['level'] | string) if log['level'] is defined }};
{% else %}
error_log {{ log['error'] if log['error'] is string else log['error']['file'] }}{{ (' ' + log['error']['level'] | string) if log['error']['level'] is defined }};
{% endfor %}
{% endif %}
{% if log['open_log_file_cache'] is defined %}
open_log_file_cache {{ 'off' if not log['open_log_file_cache'] else ('max=' + log['open_log_file_cache']['max'] | string) }}{{ (' inactive=' + log['open_log_file_cache']['inactive'] | string) if log['open_log_file_cache']['inactive'] is defined }}{{ (' min_uses=' + log['open_log_file_cache']['min_uses'] | string) if log['open_log_file_cache']['min_uses'] is defined and log['open_log_file_cache']['min_uses'] is number }}{{ (' valid=' + log['open_log_file_cache']['valid'] | string) if log['open_log_file_cache']['valid'] is defined }};
{% endif %}

{% endmacro %}
